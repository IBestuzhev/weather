{
    "$schema": "https://raw.githubusercontent.com/crossbario/crossbar/master/crossbar.json",
    "version": 2,
    "controller": {
    },
    "workers": [
        {
            "type": "router",
            "realms": [
                {
                    "name": "realm1",
                    "roles": [
                        {
                            "name": "frontend",
                            "authorizer": "com.weather.authorize"
                        },
                        {
                            "name": "backend",
                            "permissions": [
                                {
                                    "uri": "com.weather",
                                    "match": "prefix",
                                    "allow": {
                                        "publish": true
                                    }
                                },
                                {
                                    "uri": "com.weather.authorize",
                                    "allow": {
                                        "register": true
                                    }
                                },
                                {
                                    "uri": "com.weather.login",
                                    "allow": {
                                        "register": true
                                    }
                                },
                                {
                                    "uri": "com.myapp.get_cities",
                                    "allow": {
                                        "register": true,
                                        "call": true
                                    }
                                }
                            ]
                        }
                    ]
                }
            ],
            "transports": [
                {
                    "type": "rawsocket",
                    "endpoint": {
                        "type": "tcp",
                        "port": 8081,
                        "backlog": 1024
                    },
                    "options": {
                        "max_message_size": 1048576
                    },
                    "serializers": ["cbor", "msgpack", "json"],
                    "auth": {
                        "anonymous": {
                            "role": "backend",
                            "type": "static"
                        }
                    }
                },
                {
                    "type": "web",
                    "endpoint": {
                        "type": "tcp",
                        "port": 8080,
                        "backlog": 1024
                    },
                    "paths": {
                        "/": {
                            "type": "static",
                            "directory": "../web",
                            "options": {
                                "enable_directory_listing": true
                            }
                        },
                        "ws": {
                            "type": "websocket",
                            "serializers": [
                                "cbor", "msgpack", "json"
                            ],
                            "options": {
                                "allowed_origins": ["*"],
                                "allow_null_origin": true,
                                "enable_webstatus": false,
                                "max_frame_size": 1048576,
                                "max_message_size": 1048576,
                                "auto_fragment_size": 65536,
                                "fail_by_drop": true,
                                "open_handshake_timeout": 2500,
                                "close_handshake_timeout": 1000,
                                "auto_ping_interval": 10000,
                                "auto_ping_timeout": 5000,
                                "auto_ping_size": 4,
                                "compression": {
                                    "deflate": {
                                        "request_no_context_takeover": false,
                                        "request_max_window_bits": 13,
                                        "no_context_takeover": false,
                                        "max_window_bits": 13,
                                        "memory_level": 5
                                    }
                                }
                            },
                            "auth": {
                                "anonymous": {
                                    "type": "dynamic",
                                    "authenticator": "com.weather.login"
                                }
                            }
                        },
                        "publish": {
                            "type": "publisher",
                            "realm": "realm1",
                            "role": "backend",
                            "options": {
                                "require_ip": ["127.0.0.1"]
                            }
                        },
                        "info": {
                            "type": "nodeinfo"
                        }
                    }
                }
            ],
            "components": [
                {
                    "type": "class",
                    "classname": "crossbar.bridge.rest.RESTCallee",
                    "realm": "realm1",
                    "extra": {
                        "procedure": "com.myapp.get_cities",
                        "baseurl": "http://localhost:8008/get-cities/"
                    },
                    "role": "backend"
                }
            ]
        },
        {
            "type": "guest",
            "executable": "python",
            "arguments": ["authorizer.py"],
            "options": {
                "workdir": "..",
                "watch": {
                    "directory": "..",
                    "action": "restart"
                }
            }
        }
    ]
}
